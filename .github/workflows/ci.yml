---
name: ci workflow
"on": push

env:
  ANSIBLE_ROLES_PATH: "..:tests/roles"

jobs:
  test-job:
    name: test the role
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: print versions
      run: |
        python3 --version
        pip3 --version
        ansible --version
        ansible-galaxy --version
        docker version

    - name: prepare tests
      run: |
        set -x
        pip3 install -r requirements.txt
        ansible-galaxy install -p tests/roles -r requirements.yml

        # Start a sshd container for testing
        # - listen on localhost:4848
        # - enable root login
        # - root login via pubkey
        docker pull danielguerra/alpine-sshd
        docker rm -f alpine-sshd || true
        docker run -p 4848:22 --name alpine-sshd --hostname alpine-sshd -d danielguerra/alpine-sshd sh -c 'echo -e "PermitRootLogin yes\nPasswordAuthentication no\n" >> /etc/ssh/sshd_config && exec /usr/sbin/sshd -D'
        ssh-keygen -N '' -f ~/.ssh/id_rsa
        cat ~/.ssh/id_rsa.pub | docker exec -i alpine-sshd sh -c 'cd; umask 077; mkdir -p .ssh; cat >> .ssh/authorized_keys'
        echo -e '123456\n123456' | docker exec -i alpine-sshd passwd # change passwd to enable root login
        ssh-keygen -f ~/.ssh/known_hosts -R [localhost]:4848 || true
        sleep 1 && ssh-keyscan -p 4848 localhost >> ~/.ssh/known_hosts
        ssh -p 4848 root@localhost true

    - name: syntax check
      run: ansible-playbook tests/test.yml -i tests/inventory --syntax-check

    - name: invalid mode for ~/.ssh/config
      run: |
        set -x
        touch ~/.ssh/config && chmod 666 ~/.ssh/config && ls -alhd ~/.ssh/ && ls -alh ~/.ssh ~/.ssh/
        true && ! ssh -p 4848 root@localhost true
        ansible-playbook tests/test.yml -i tests/inventory
        ls -alhd ~/.ssh/ && ls -alh ~/.ssh ~/.ssh/
        ssh -p 4848 root@localhost true

    - name: invalid mode for ~/.ssh
      run: |
        set -x
        chmod 755 ~/.ssh && ls -alhd ~/.ssh/ && ls -alh ~/.ssh ~/.ssh/
        ansible-playbook tests/test.yml -i tests/inventory
        ls -alhd ~/.ssh/ && ls -alh ~/.ssh ~/.ssh/
        ssh -p 4848 root@localhost true

    - name: reference
      run: |
        set -x
        mkdir -p ~/.config && mv ~/.ssh ~/.config/ssh && ln -s .config/ssh ~/.ssh
        touch ~/.ssh/config && chmod 622 ~/.ssh/config && ls -alhd ~/.ssh/ && ls -alh ~/.ssh ~/.ssh/
        true && ! ssh -p 4848 root@localhost true
        ansible-playbook tests/test.yml -i tests/inventory
        ls -alhd ~/.ssh/ && ls -alh ~/.ssh ~/.ssh/
        ssh -p 4848 root@localhost true

    - name: no ~/.ssh dir
      run: |
        set -x
        rm -rf ~/.ssh
        ansible-playbook tests/test.yml -i tests/inventory

  lint-job:
    name: lint codes
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: prepare lint
      run: |
        pip3 install -r requirements.txt
        pip3 install ansible-lint
        ansible-lint --version
        ansible-galaxy install -p tests/roles -r requirements.yml
    - name: lint
      run: ansible-lint --show-relpath --exclude tests/roles

  deploy-job:
    name: deploy the role on tag
    runs-on: ubuntu-22.04
    needs: [test-job, lint-job]
    if: github.ref_type == 'tag'
    steps:
    - uses: actions/checkout@v3
    - name: publish the role to Galaxy
      uses: robertdebock/galaxy-action@1.2.1
      with:
        galaxy_api_key: ${{ secrets.GALAXY_API_KEY }}
        git_branch: ${{ github.ref_name }}
